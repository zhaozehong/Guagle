<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:HelperLib="clr-namespace:CShart.Solution.HelperLib">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/HelperLib;Component/Resources/Brushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>

  <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>

  <Style TargetType="{x:Type Button}">
    <Setter Property="Margin" Value="4"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
    <Setter Property="BorderThickness" Value="1.5"/>
    <Setter Property="Background" Value="{StaticResource ButtonBackgroundBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Margin="0">
            <Rectangle Margin="0" Opacity="1" RadiusX="8" RadiusY="8"
                       Fill="{TemplateBinding Background}"
                       Stroke="{TemplateBinding BorderBrush}"
                       StrokeThickness="{TemplateBinding BorderThickness}"/>
            <ContentPresenter Margin="{TemplateBinding Margin}" VerticalAlignment="Center" HorizontalAlignment="Center"
                              Content="{TemplateBinding Content}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource ButtonMouseOverBackgroundBrush}"/>
      </Trigger>
      <Trigger Property="IsPressed" Value="True">
        <Setter Property="RenderTransform">
          <Setter.Value>
            <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
          </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="Foreground">
          <Setter.Value>
            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="BrowserButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Content" Value="..."/>
    <Setter Property="Margin" Value="4"/>
    <Setter Property="Padding" Value="0"/>
    <Setter Property="VerticalAlignment" Value="Bottom"/>
    <Setter Property="Width" Value="25"/>
    <Setter Property="MaxHeight" Value="25"/>
  </Style>

  <Style x:Key="DialogButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="MinWidth" Value="60"/>
    <Setter Property="MinHeight" Value="22"/>
  </Style>
  <Style x:Key="DialogCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource DialogButtonStyle}">
    <Setter Property="MinHeight" Value="25"/>
  </Style>

  <Style x:Key="TransparentButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="BorderThickness" Value="0"/>
  </Style>
  <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
    <Setter Property="Margin" Value="2"/>
    <Setter Property="Height" Value="22"/>
    <Setter Property="HorizontalAlignment" Value="Center"/>
    <Setter Property="BorderThickness" Value="0"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter RecognizesAccessKey="True"
                              Margin="{TemplateBinding Padding}"
                              Height="{TemplateBinding Height}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsMouseOver" Value="True">
        <Setter Property="Background" Value="{StaticResource ImageButtonBackgroundBrush}"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="True">
        <Setter Property="OpacityMask" Value="{StaticResource enabledMask}" />
        <Setter Property="Opacity" Value="1.0"/>
      </Trigger>
      <Trigger Property="IsEnabled" Value="False">
        <Setter Property="OpacityMask" Value="{StaticResource disabledMask}" />
        <Setter Property="Opacity" Value="0.8"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type ToggleButton}">
    <Setter Property="Margin" Value="2"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Style.Triggers>
      <Trigger Property="IsChecked" Value="True">
        <Setter Property="Background" Value="LightYellow"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ImageToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}"/>
  </Style>
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="Width" Value="16"/>
    <Setter Property="Height" Value="16"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{StaticResource TransparentBrush}" Height="33" Padding="5,5,5,5" Width="33">
            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{StaticResource TransparentBrush}" Stroke="{StaticResource ToggleButtonStrokeBrush}">
              <Path.RenderTransform>
                <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
              </Path.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource ButtonStrokeBrush}"/>
              <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TransparentBrush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
              <Setter Property="RenderTransform" TargetName="ExpandPath">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                </Setter.Value>
              </Setter>
              <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource ToggleButtonStrokeBrush}"/>
              <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource ToggleButtonStrokeBrush}"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="Margin" Value="4,2"/>
    <Setter Property="VerticalAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Background" Value="{StaticResource TransparentBrush}"/>
  </Style>

  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource ImageButtonStyle}">
    <Setter Property="Margin" Value="1"/>
    <Setter Property="Padding" Value="1"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
    <Setter Property="Margin" Value="1"/>
  </Style>
</ResourceDictionary>